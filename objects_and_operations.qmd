# Objects and Operations

## Basic Operations
First, we will start by exploring some of the basic characteristics of R.

R can be used as a simple calculator and will process both numbers and conventional mathematical operator symbols. You can run the commands below by placing your cursor at the beginning or end of the line and pressing CTRL+Enter (Windows) or Command+Return (Mac)

```{r}         
5+2
```

You should see the result displayed in the console below.

## Storing Objects
R is especially helpful for allowing us to create and store objects that we can call and manipulate later. We can create names for these objects and then use R's 'assignment operator,' the \<- symbol, to assign a value to our specified object name. Here, we'll assign the previous calculation to an object that we are calling 'our_object'.

There are some more baroque ways around this, but it's best to operate under the impression that object names cannot include spaces (or start with numbers). This kind of thing is common in some programming languages, so there are a couple stylistic conventions to address this. I tend to use what's called 'snake case,' which involves replacing spaces with underscores. There's also 'camel case,' where each word has the first letter capitalized, e.g. MyVariableName. I would settle on one that you like and be consistent with it.

```{r}
our_object <- 5+2
```

If you run this command, you should see 'our_object' populate in the upper-right Environment window. This is where you can find all of the objects that you manually specify in your R session. We can run the object itself, as well as combine it with other operations

```{r}
our_object

our_object + 3

our_object * 100
```

## A Note on Functions
R is also useful for its implementation of functions, which you can think of in the sense you likely learned in your math classes. Functions are defined procedures that take some input value, transform that value according to the procedure, and then output a new value.

R comes with a great deal of already defined functions, and we can use these to perform all sorts of helpful operations. You can call a function by indicating it's common name and then placing it's required inputs between parentheses, e.g. function_name(input). We'll get a lot of mileage out of functions.

Now, let's take a step back and think about some of our basic building blocks in R.
