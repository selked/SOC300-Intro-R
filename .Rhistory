#################################
#Subset the data so that we can focus on a just a few variables of interest
cont_vars <- c("year", "id", "age")
cat_vars <- c("race", "sex", "realrinc", "educ", "partyid", "happy", "marital")
my_vars <- c(cont_vars, cat_vars)
our_gss <- our_gss |>
select(all_of(my_vars))
#Make sure all missing data is coded as NA
gss_sub <- gss_sub |>
mutate(across(everything(), haven::zap_missing))
#Make sure all missing data is coded as NA
our_gss <- our_gss |>
mutate(across(everything(), haven::zap_missing))
#Recode categorical variables into factors
our_gss <- our_gss |>
mutate(across(all_of(cat_vars), forcats::as_factor))
View(our_gss)
write.csv(our_gss, file = "C:\Users\selke\Desktop\Teaching\SOC 300 F 2025\our_gss.csv")
write.csv(our_gss, file = "C:/Users/selke/Desktop/Teaching/SOC 300 F 2025/our_gss.csv")
rm(our_gss)
our_gss <- read_csv("C:/Users/selke/Desktop/Teaching/SOc 300 F 2025/our_gss.csv")
View(our_gss)
our_gss[,-1]
our_gss <- our_gss[,-1]
str(our_gss)
our_gss$sex <- as.factor(our_gss$sex)
our_gss$race <- as.factor(our_gss$race)
View(our_gss)
our_gss <- our_gss[,-7]
levels(our_gss$happy)
our_gss$happy <- factor(
our_gss$happy,
levels = c("not too happy", "pretty happy", "very happy"),
ordered = TRUE
)
str(our_gss)
our_gss$partyid <- as.factor(our_gss$partyid)
our_gss$marital <- as.factor(our_gss$marital)
str(our_gss)
our_gss$id <- as.factor(our_gss$id)
str(our_gss)
save(our_gss, file="C:/Users/selke/Desktop/Teaching/SOC 300 F 2025/our_gss.rda")
gss_sub <- load("C:/Users/selke/Desktop/our_gss.rda")
gss_sub <- load("C:/Users/selke/Desktop/our_gss.rda")
gss_sub <- our_gss
rm(our_gss)
load("~/git_repos/SOC300-Intro-R/our_gss.rda")
mar_sub <- our_gss |>
select(id, marital)
View(mar_sub)
our_gss <- left_join(gss_sub, our_gss)
gss_sub$id <- as.factor(gss_sub$id)
our_gss <- left_join(gss_sub, our_gss)
View(our_gss)
save(our_gss, file = "our_gss.rda")
count(our_gss$marital)
count(our_gss$marital)
summary(our_gss$marital)
count(our_gss$marital)
count(our_gss$partyid)
# You can observe the response variables there, or you can run the following command
count(our_gss$marital)
# First thing's first, make sure you have your workspace set up. We'll load some packages and bring in our data.
library(tidyverse)
library(DescTools)
library(janitor)
# Running the following command will bring up a file explorer window. Navigate to the location of 'our_gss.rda' from the Moodlge page, and open the file
load(file.choose())
# You can observe the response variables there, or you can run the following command
count(our_gss$marital)
# You can observe the response variables there, or you can run the following command
dplyr::count(our_gss$marital)
# You can observe the response variables there, or you can run the following command
count(our_gss, marital)
our_gss <- our_gss |>
mutate(
marital_recoded = fct_collapse(
marital,
"Married" = C("married"),
"Unmarried" = c("divorced", "never married", "separated", "widowed")
)
)
(
marital_recoded = fct_collapse(
marital,
"Married" = C("married"),
"Unmarried" = c("divorced", "never married", "separated", "widowed")
)
)
our_gss <- our_gss |>
mutate(
marital_recoded = fct_collapse(
marital,
"Married" = C("married"),
"Unmarried" = c("divorced", "never married", "separated", "widowed")
)
)
(
marital_recoded = fct_collapse(
marital,
"Married" = C("married"),
"Unmarried" = c("divorced", "never married", "separated", "widowed")
)
)
our_gss <- our_gss |>
mutate(
marital_recoded = fct_collapse(
marital,
"Married" = C("married"),
"Unmarried" = c("divorced", "never married", "separated", "widowed")
)
)
our_gss <- our_gss |>
mutate(
marital_recoded = fct_collapse(
marital,
"Married" = C("married"),
"Unmarried" = c("divorced", "never married", "separated", "widowed")
)
)
our_gss <- our_gss |>
mutate(
marital_recoded = fct_collapse(
marital,
"Married" = C("married"),
"Unmarried" = c("divorced", "never married", "separated", "widowed")
)
)
summary(our_gss$marital)
barplot(
our_gss$marital
)
our_gss <- our_gss |>
mutate(
marital_recoded = fct_collapse(marital,
"Married" = C("married"),
"Unmarried" = c("divorced", "never married", "separated", "widowed")
)
)
our_gss <- our_gss |>
mutate(
marital_recoded = fct_collapse(
marital,
"Unmarried" = c("divorced", "never married", "separated", "widowed")
)
)
View(our_gss)
our_gss <- our_gss |>
mutate(
marital_recoded = fct_collapse(
marital,
"Married" = c("married"),
"Unmarried" = c("divorced", "never married", "separated", "widowed")
)
)
View(our_gss)
#################################
#GSS Subsetting (not for class)
#################################
#Subset the data so that we can focus on a just a few variables of interest
cont_vars <- c("year", "id", "age")
cat_vars <- c("race", "sex", "realrinc", "educ", "partyid", "happy", "marital", "attend")
my_vars <- c(cont_vars, cat_vars)
library(gssr)
library(gssrdoc)
gss_sub <- gss_get_yr(2022)
gss_sub <- gss_sub |>
select(all_of(my_vars))
#Make sure all missing data is coded as NA
gss_sub <- gss_sub |>
mutate(across(everything(), haven::zap_missing))
#Recode categorical variables into factors
gss_sub <- gss_sub |>
mutate(across(all_of(cat_vars), forcats::as_factor))
View(gss_sub)
gss_sub$attend <- as.factor(gss_sub$attend)
#Make sure all missing data is coded as NA
gss_sub <- gss_sub |>
mutate(across(everything(), haven::zap_labels))
library(haven)
zap_label(gss_sub)
gss_sub <- zap_label(gss_sub)
gss_sub$id <- as.factor(gss_sub$id)
at_sub <- gss_sub |>
select(id, attend)
our_gss <- left_joint(our_gss, at_sub)
our_gss <- left_join(our_gss, at_sub)
View(our_gss)
rm(at_sub)
rm(gss_sub)
count(our_gss$attend)
count(our_gss, attend)
our_gss <- our_gss |>
mutate(
attend_recoded = fct_collapse(
attend,
"never" = c("never"),
"yearly" = c("less than once a year", "about once or twice a year", "several times a year"),
"monthly" = c("about once a month", "2-3 times a month", "nearly every week", ),
"weekly" = c("every week", "several times a week")
)
)
our_gss <- our_gss |>
mutate(
attend_recoded = fct_collapse(
attend,
"never" = c("never"),
"yearly" = c("less than once a year", "about once or twice a year", "several times a year"),
"monthly" = c("about once a month", "2-3 times a month", "nearly every week", ),
"weekly" = c("every week", "several times a week")
)
)
our_gss <- our_gss |>
mutate(
attend_recoded = fct_collapse(
attend,
"never" = c("never"),
"yearly" = c("less than once a year", "about once or twice a year", "several times a year"),
"monthly" = c("about once a month", "2-3 times a month", "nearly every week" ),
"weekly" = c("every week", "several times a week")
)
)
View(our_gss)
# Take a look at this new variable
count(our_gss$attend_recoded)
# Take a look at this new variable
count(our_gss, attend_recoded)
# 4.) Fill in the code below to produce a frequency table of our recoded variable
our_gss |>
tabyl(partyid_recoded) |>
adorn_totals(where = "row") |>
adorn_pct_formatting() |>
adorn_rounding(digits = 2)
# 4.) Fill in the code below to produce a frequency table of our recoded variable
our_gss |>
tabyl(attend_recoded) |>
adorn_totals(where = "row") |>
adorn_pct_formatting() |>
adorn_rounding(digits = 2)
# 4.) Fill in the code below to produce a frequency table of our recoded variable. Specifically, you will need to insert information in the parenthesis for 'tabyl()' as well as the quotation marks for adorn_totals(where = "").
our_gss |>
tabyl() |>
adorn_totals(where = "", na.rm = TRUE) |>
adorn_pct_formatting() |>
adorn_rounding(digits = 2)
# 4.) Fill in the code below to produce a frequency table of our recoded variable. Specifically, you will need to insert information in the parenthesis for 'tabyl()' as well as the quotation marks for adorn_totals(where = "").
our_gss |>
tabyl(attend_recoded) |>
adorn_totals(where = "", na.rm = TRUE) |>
adorn_pct_formatting() |>
adorn_rounding(digits = 2)
# 4.) Fill in the code below to produce a frequency table of our recoded variable. Specifically, you will need to insert information in the parenthesis for 'tabyl()' as well as the quotation marks for adorn_totals(where = "").
our_gss |>
tabyl(attend_recoded) |>
adorn_totals(where = "row", na.rm = TRUE) |>
adorn_pct_formatting() |>
adorn_rounding(digits = 2)
# 4.) Fill in the code below to produce a frequency table of our recoded variable. Specifically, you will need to insert information in the parenthesis for 'tabyl()' as well as the quotation marks for adorn_totals(where = "").
our_gss |>
tabyl(attend_recoded) |>
adorn_totals(where = "row") |>
adorn_pct_formatting() |>
adorn_rounding(digits = 2)
our_gss$attend_recoded |>
summary() |>
barplot(
main = "",
xlab = "",
ylab = ""
)
our_gss$attend_recoded |>
omit.na() |>
summary() |>
barplot(
main = "",
xlab = "",
ylab = ""
)
our_gss$attend_recoded |>
na.omit() |>
summary() |>
barplot(
main = "",
xlab = "",
ylab = ""
)
# The GSS's 'race' variable is a relatively simple one with only 3 categories. Observe these with the following command
count(our_gss, race)
our_gss <- our_gss |>
mutate(
race_recoded = fct_recode(
race,
NULL = "other"
)
)
View(our_gss)
# Verify that this worked
count(our_gss, race_recoded)
our_gss <- our_gss |>
mutate(
realrinc_recoded = cut(
realrinc,
breaks = c(0, 35000, 80000, Inf),
include.lowest = TRUE,
right = FALSE,
labels = c("working class", "middle class", "upper class"),
ordered_result = TRUE
)
)
count(our_gss, realrinc_recoded)
count(our_gss, realrinc)
# Take a look at this new variable
count(our_gss, realrinc_recoded)
# Take a look at a bar plot of this new recoded variable
our_gss$realrinc_recoded |>
na.omit() |>
summary() |>
barplot(
main = "Class distribution of 2022 GSS respondents",
xlab = "Class category",
ylab = "Count"
)
count(our_gss, attend)
our_gss <- our_gss |>
mutate(
attend_recoded = fct_collapse(
attend,
"never" = c("never"),
"yearly" = c("less than once a year", "about once or twice a year", "several times a year"),
"monthly" = c("about once a month", "2-3 times a month", "nearly every week"),
"weekly" = c("every week", "several times a week")
)
)
# Take a look at this new variable
count(our_gss, attend_recoded)
our_gss$attend_recoded |>
na.omit() |>
summary() |>
barplot(
main = "Church attendance distribution of 2022 GSS respondents",
xlab = "Frequency of church attendance",
ylab = "Count"
)
Mode(our_gss$attend_recoded, na.rm = TRUE)
# The GSS's 'race' variable is a relatively simple one with only 3 categories. Observe these with the following command
count(our_gss, race)
our_gss <- our_gss |>
mutate(
race_recoded = fct_recode(
race,
NULL = "other"
)
)
# Verify that this worked
count(our_gss, race_recoded)
# Take a look at a bar plot of this new recoded variable
our_gss$realrinc_recoded |>
na.omit() |>
summary() |>
barplot(
main = "Class distribution of 2022 GSS respondents",
xlab = "Class category",
ylab = "Count"
)
our_gss <- our_gss |>
mutate(
realrinc_recoded = cut(
realrinc,
breaks = c(0, 35000, 80000, Inf),
include.lowest = TRUE,
right = FALSE,
labels = c("working class", "middle class", "upper class"),
ordered_result = TRUE
)
)
# Take a look at this new variable
count(our_gss, realrinc_recoded)
# Take a look at a bar plot of this new recoded variable
our_gss$realrinc_recoded |>
na.omit() |>
summary() |>
barplot(
main = "Class distribution of 2022 GSS respondents",
xlab = "Class category",
ylab = "Count"
)
#mean(our_gss$realrinc_recoded, na.rm = TRUE)
#Median(our_gss$realrinc_recoded, na.rm = TRUE)
Mode(our_gss$realrinc_recoded, na.rm = TRUE)
# You can observe the response variables there, or you can run the following command
count(our_gss, attend)
# Take a look at a bar plot of this new recoded variable
our_gss$realrinc_recoded |>
na.omit() |>
summary() |>
barplot(
main = "Class distribution of 2022 GSS respondents",
xlab = "Class category",
ylab = "Count"
)
our_gss |>
tabyl(attend_recoded) |>
adorn_totals(where = "row") |>
adorn_pct_formatting() |>
adorn_rounding(digits = 2)
our_gss$attend_recoded |>
na.omit() |>
summary() |>
barplot(
main = "Church attendance distribution of 2022 GSS respondents",
xlab = "Frequency of church attendance",
ylab = "Count"
)
our_gss$attend_recoded |>
na.omit() |>
summary() |>
barplot(
main = "Frequency of church attendance among 2022 GSS respondents",
xlab = "Frequency of church attendance",
ylab = "Count"
)
Mode(our_gss$attend_recoded, na.rm = TRUE)
# Verify that this worked
count(our_gss, race_recoded)
our_gss <- our_gss |>
mutate(
race_recoded = fct_recode(
race,
NULL = "other"
)
)
# Verify that this worked
count(our_gss, race_recoded)
# Take a look at a bar plot of this new recoded variable
our_gss$realrinc_recoded |>
na.omit() |>
summary() |>
barplot(
main = "Class distribution of 2022 GSS respondents",
xlab = "Class category",
ylab = "Count"
)
View(our_gss)
our_gss <- our_gss[, c(-10, -12, -13, -14)]
save(our_gss, file = "our_gss.rda")
# You can observe the response variables there, or you can run the following command
count(our_gss, attend)
our_gss <- our_gss |>
mutate(
attend_recoded = fct_collapse(
attend,
"never" = c("never"),
"yearly" = c("less than once a year", "about once or twice a year", "several times a year"),
"monthly" = c("about once a month", "2-3 times a month", "nearly every week"),
"weekly" = c("every week", "several times a week")
)
)
# Take a look at this new variable
count(our_gss, attend_recoded)
our_gss |>
tabyl(attend_recoded) |>
adorn_totals(where = "row") |>
adorn_pct_formatting() |>
adorn_rounding(digits = 2)
our_gss$attend_recoded |>
na.omit() |>
summary() |>
barplot(
main = "Frequency of church attendance among 2022 GSS respondents",
xlab = "Frequency of church attendance",
ylab = "Count"
)
Mode(our_gss$attend_recoded, na.rm = TRUE)
# The GSS's 'race' variable is a relatively simple one with only 3 categories. Observe these with the following command
count(our_gss, race)
our_gss <- our_gss |>
mutate(
race_recoded = fct_recode(
race,
NULL = "other"
)
)
# Verify that this worked
count(our_gss, race_recoded)
our_gss <- our_gss |>
mutate(
realrinc_recoded = cut(
realrinc,
breaks = c(0, 35000, 80000, Inf),
include.lowest = TRUE,
right = FALSE,
labels = c("working class", "middle class", "upper class"),
ordered_result = TRUE
)
)
# Take a look at this new variable
count(our_gss, realrinc_recoded)
# Take a look at a bar plot of this new recoded variable
our_gss$realrinc_recoded |>
na.omit() |>
summary() |>
barplot(
main = "Class distribution of 2022 GSS respondents",
xlab = "Class category",
ylab = "Count"
)
#mean(our_gss$realrinc_recoded, na.rm = TRUE)
#Median(our_gss$realrinc_recoded, na.rm = TRUE)
Mode(our_gss$realrinc_recoded, na.rm = TRUE)
load("~/git_repos/SOC300-Intro-R/our_gss.rda")
View(our_gss)
load("C:/Users/selke/Downloads/our_gss.rda")
