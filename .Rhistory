"SD" = sd(realrinc, na.rm = TRUE)
)
our_gss |>
select(realrinc) |>
summarize(
"Minimum" = min(realrinc, na.rm = TRUE),
"Median" = median(realrinc, na.rm = TRUE),
"Maximum" = max(realrinc, na.rm = TRUE),
"SD" = sd(realrinc, na.rm = TRUE)
)
our_gss |>
select(realrinc) |>
summarize(
"Minimum" = min(realrinc, na.rm = TRUE),
"Median" = median(realrinc, na.rm = TRUE),
"Maximum" = max(realrinc, na.rm = TRUE),
"SD" = sd(realrinc, na.rm = TRUE)
)
flextable(realrinc_univariate)
library(flextable)
flextable(realrinc_univariate)
check <- locmodes(
our_gss$age,
mod0 = 2
)
View(check)
library(DescTools)
check <- Median(our_gss$happy)
check <- Median(our_gss$happy, na.rm = TRUE)
Median(our_gss$happy, na.rm = TRUE)
check[1]
check <- our_gss |>
select(happy) |>
summarize(
"Median" = Median(happy)
)
check <- our_gss |>
select(happy) |>
summarize(
"Median" = Median(happy, na.rm = TRUE)
)
library(gtsummary)
tbl_summary(our_gss$happy)
our_gss |> tbl_summary(include = c(happy, partyid_recoded))
our_gss |> tbl_summary(include = c(happy, partyid))
our_gss |> tbl_summary(include = c(happy))
View(sd_examples)
library(tidyverse)
library(tidyverse)
load("our_gss.rda")
library(multimode)
modetest(our_gss$age, mod0 = 1)
modetest(our_gss$age, mod0 = 2)
library(tidyverse)
library(tidyverse)
library(janitor)
load("our_gss.rda")
our_gss <- our_gss |>
mutate(
partyid_recoded=fct_collapse(partyid,
"Democrat" = c("strong democrat", "not very strong democrat"),
"Republican" = c("strong republican","not very strong republican"),
"Independent" = c("independent, close to democrat", "independent (neither, no response)", "independent, close to republican"),
"Other Party" = c("other party")
))
our_gss <- our_gss |>
mutate(dem_rep = fct_recode(
partyid_recoded,
NULL="Other Party",
NULL="Independent"))
our_gss |>
tabyl(
var1 = sex,
var2 = dem_rep
)
our_gss |>
tabyl(
var1 = dem_rep,
var2 = sex
)
our_gss |>
tabyl(
var1 = dem_rep,
var2 = sex
) |>
drop_na()
our_gss |>
tabyl(
var1 = dem_rep,
var2 = sex
) |>
drop_na(sex, dem_rep)
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex
)
our_gss |>
drop_na() |>
tabyl(
var1 = dem_rep,
var2 = sex
)
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex
)
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var 1 = dem_rep,
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_percentages()
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_percentages() |>
adorn_pct_formatting()
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear") |>
adorn_totals(where = "row")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear") |>
adorn_totals(where = "rows")
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "rows") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "front")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row")
adorn_percentages() |>
adorn_pct_formatting()
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting()
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "front")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "front") |>
adorn_title(
placement = "top",
row_name = "Political Party",
col_name = "Sex")
col_name = "Sex")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = c("row", "col")) |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "front") |>
adorn_title(
placement = "top",
row_name = "Political Party",
col_name = "Sex")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "front") |>
adorn_title(
placement = "top",
row_name = "Political Party",
col_name = "Sex")
my_tab <- our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "front") |>
adorn_title(
placement = "top",
row_name = "Political Party",
col_name = "Sex")
View(my_tab)
flextable(my_tab)
library(flextable)
flextable(my_tab)
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "front") |>
adorn_title(
placement = "top",
row_name = "Political Party",
col_name = "Sex") |>
flextable()
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "front") |>
flextable()
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear") |>
flextable()
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear") |>
adorn_title(
placement = "top",
row_name = "Political Party",
col_name = "Sex")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear") |>
adorn_title(
placement = "combined",
row_name = "Political Party",
col_name = "Sex") |>
flextable()
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear") |>
adorn_title(
placement = "top",
row_name = "Political Party",
col_name = "Sex")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear") |>
adorn_title(
placement = "top",
row_name = "Political Party",
col_name = "Sex")
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear") |>
adorn_title(
placement = "top",
row_name = "Political Party",
col_name = "Sex") |>
chisq.test()
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_totals(where = "row") |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear") |>
chisq.test()
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
adorn_percentages() |>
adorn_pct_formatting() |>
adorn_ns(position = "rear") |>
chisq.test()
our_gss |>
drop_na(sex, dem_rep) |>
tabyl(
var1 = dem_rep,
var2 = sex) |>
chisq.test()
library(gtsummary)
our_gss |>
select(sex, dem_rep) |>
drop_na() |>
tbl_summary(by = sex) |>
add_p()
our_gss |>
select(sex, dem_rep) |>
drop_na() |>
tbl_summary(by = sex) |>
add_p() |>
label = list(sex = "Sex", dem_rep = "Political Party")
our_gss |>
select(sex, dem_rep) |>
drop_na() |>
tbl_summary(
by = sex,
label = list(sex = "Sex", dem_rep = "Political Party")) |>
add_p()
load("~/git_repos/SOC300-Intro-R/our_gss.rda")
num_vec <- c(1.2, 3.4, 5.6, 7.1, 2.8)
character_vec <- c("east", "west", "south", "south", "north")
logical_vec <- c(TRUE, FALSE, TRUE, FALSE, FALSE)
#Take the mean() function, for example. As the name implies, this function will return the arithmetic mean of a numeric vector. Let's give it the one we just made above:
mean(num_vec)
#Note that it gives the same response as if we had manually calculated it.
(1.2+3.4+5.6+7.1+2.8)/5
#But, what happens when we run the following command?
mean(character_vec)
p_id_vec<-c("p1", "p2", "p3", "p4", "p5")
ordinal_vec<-c("small", "medium", "medium", "large", "medium")
our_df<-data.frame(
p_id = p_id_vec,
dog_size = ordinal_vec,
side_of_town = character_vec,
food_per_day = num_vec,
has_a_labrador = logical_vec
)
#Take a look at our new data frame by clicking on the object in our Environment window at the upper right, or by running the following command. Both do the same thing
View(our_df)
#Once we have created a data frame, we can refer to individual variables with the $ operator in R
our_df$food_per_day
mean(our_df$food_per_day)
#We can look at some basic characteristics of the data frame with the summary() function. Note that it will return different information depending on the data type of the variable
summary(our_df)
#We can turn this variable into a factor variable with base R's as.factor() function.
our_df$side_of_town <- as.factor(our_df$side_of_town)
#Check the summary() output again and notice how the output is reported now
summary(our_df)
our_df$dog_size <- factor(
our_df$dog_size,
levels=c("small", "medium", "large"),
ordered = TRUE
)
#Take a look back at the summary. Now, instead of 5 separate character strings, we can see the breakdown of how many people own a certain number of dogs.
summary(our_df)
str(our_df)
#After it's done installing, go back and run the library(tidyverse) command again.
library(tidyverse)
#Let's use this subset to explore some tidyverse functionality.
sex_inc <- select(our_gss, id, sex, realrinc)
summary(sex_inc)
fem_inc <- filter(sex_inc, sex=="female")
mean_inc <- summarise(our_gss, "mean_inc"=mean(realrinc, na.rm=TRUE))
View(mean_inc)
our_gss <- group_by(our_gss, partyid)
mean_inc <- summarize(
our_gss,
"mean_inc" = mean(realrinc, na.rm = TRUE)
)
View(mean_inc)
mean_inc <- summarise(our_gss, "mean_inc"=mean(realrinc, na.rm=TRUE))
our_gss <- group_by(our_gss, partyid)
grouped_mean_inc <- summarize(
our_gss,
"mean_inc" = mean(realrinc, na.rm = TRUE)
)
mean_inc
sexpol_means <- our_gss |>
select(id, sex, realrinc, partyid) |>
group_by(sex, partyid) |>
summarize("mean_inc" = mean(realrinc, na.rm=TRUE)) |>
drop_na(sex, partyid)
View(sexpol_means)
library(tidyverse)
library(hrbrthemes)
library(scales)
library(wesanderson)
library(sysfonts)
sysfonts::font_add_google("Roboto Condensed")
sysfonts::font_add("Arial Narrow", regular = "ARIALN.ttf")
ndist <- rnorm(10000)
d <- data.frame(x = 1:length(ndist), y = ndist)
ggplot(d, aes(y)) +
geom_histogram(binwidth = .1) +
geom_vline(aes(xintercept = mean(y), color = "mean")) +
geom_vline(aes(xintercept = median(y), color = "median"), linetype="dashed") +
scale_color_manual(name = "stat", values = c(mean = "brown", median = "orange")) +
theme_ft_rc() +
labs(
title = "Normal distribution; n = 10,000",
x = "Response value",
y = "Frequency"
)
